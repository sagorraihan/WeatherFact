{"ast":null,"code":"var _jsxFileName = \"G:\\\\react\\\\reactapp\\\\src\\\\components\\\\Temp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Temp = () => {\n  _s();\n\n  const [searchValue, setSearchValue] = useState(\" \");\n  const [tempInfo, setTempInfo] = useState({});\n\n  const getWeatherInfo = async () => {\n    try {\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=9f4d07b6d78b9c25a119aa57f813b9af`;\n      let res = await fetch(url);\n      let data = await res.json();\n      const {\n        temp,\n        humidity,\n        pressure\n      } = data.main;\n      const {\n        main: weathermood\n      } = data.weather[0];\n      const {\n        name\n      } = data;\n      const {\n        speed\n      } = data.wind;\n      const {\n        country,\n        sunset\n      } = data.sys;\n      const myNewWeatherInfo = {\n        temp,\n        humidity,\n        pressure,\n        weathermood,\n        name,\n        speed,\n        country,\n        sunset\n      };\n      setTempInfo(myNewWeatherInfo);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getWeatherInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          placeholder: \"search...\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          value: searchValue,\n          onChange: e => setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, { ...tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Temp, \"s5VG3c/CEyVPWmxmlnf5gYp1vUg=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","Temp","searchValue","setSearchValue","tempInfo","setTempInfo","getWeatherInfo","url","res","fetch","data","json","temp","humidity","pressure","main","weathermood","weather","name","speed","wind","country","sunset","sys","myNewWeatherInfo","error","console","log","e","target","value"],"sources":["G:/react/reactapp/src/components/Temp.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport \"./style.css\";\r\n\r\nconst Temp = () => {\r\n    const [searchValue, setSearchValue] = useState(\" \");\r\n    const [tempInfo, setTempInfo] = useState({});\r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=9f4d07b6d78b9c25a119aa57f813b9af`;\r\n\r\n            let res = await fetch(url);\r\n            let data = await res.json();\r\n\r\n            const { temp, humidity, pressure } = data.main;\r\n            const { main: weathermood } = data.weather[0];\r\n            const { name } = data;\r\n            const { speed } = data.wind;\r\n            const { country, sunset } = data.sys;\r\n\r\n            const myNewWeatherInfo = {\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n            };\r\n\r\n            setTempInfo(myNewWeatherInfo);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"search...\"\r\n                        autoFocus\r\n                        id=\"search\"\r\n                        className=\"searchTerm\"\r\n                        value={searchValue}\r\n                        onChange={(e) => setSearchValue(e.target.value)}\r\n                    />\r\n\r\n                    <button\r\n                        className=\"searchButton\"\r\n                        type=\"button\"\r\n                        onClick={getWeatherInfo}>\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* our temp card  */}\r\n            <WeatherCard {...tempInfo} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Temp;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,aAAP;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,GAAD,CAA9C;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMQ,cAAc,GAAG,YAAY;IAC/B,IAAI;MACA,IAAIC,GAAG,GAAI,qDAAoDL,WAAY,sDAA3E;MAEA,IAAIM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;MACA,IAAIG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;MAEA,MAAM;QAAEC,IAAF;QAAQC,QAAR;QAAkBC;MAAlB,IAA+BJ,IAAI,CAACK,IAA1C;MACA,MAAM;QAAEA,IAAI,EAAEC;MAAR,IAAwBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA9B;MACA,MAAM;QAAEC;MAAF,IAAWR,IAAjB;MACA,MAAM;QAAES;MAAF,IAAYT,IAAI,CAACU,IAAvB;MACA,MAAM;QAAEC,OAAF;QAAWC;MAAX,IAAsBZ,IAAI,CAACa,GAAjC;MAEA,MAAMC,gBAAgB,GAAG;QACrBZ,IADqB;QAErBC,QAFqB;QAGrBC,QAHqB;QAIrBE,WAJqB;QAKrBE,IALqB;QAMrBC,KANqB;QAOrBE,OAPqB;QAQrBC;MARqB,CAAzB;MAWAjB,WAAW,CAACmB,gBAAD,CAAX;IACH,CAxBD,CAwBE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH;EACJ,CA5BD;;EA8BA1B,SAAS,CAAC,MAAM;IACZO,cAAc;EACjB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,MAAf;MAAA,uBACI;QAAK,SAAS,EAAC,QAAf;QAAA,wBACI;UACI,IAAI,EAAC,QADT;UAEI,WAAW,EAAC,WAFhB;UAGI,SAAS,MAHb;UAII,EAAE,EAAC,QAJP;UAKI,SAAS,EAAC,YALd;UAMI,KAAK,EAAEJ,WANX;UAOI,QAAQ,EAAG0B,CAAD,IAAOzB,cAAc,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;QAPnC;UAAA;UAAA;UAAA;QAAA,QADJ,eAWI;UACI,SAAS,EAAC,cADd;UAEI,IAAI,EAAC,QAFT;UAGI,OAAO,EAAExB,cAHb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAuBI,QAAC,WAAD,OAAiBF;IAAjB;MAAA;MAAA;MAAA;IAAA,QAvBJ;EAAA,gBADJ;AA2BH,CAjED;;GAAMH,I;;KAAAA,I;AAmEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}